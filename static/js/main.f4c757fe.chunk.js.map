{"version":3,"sources":["component/TodoItem.module.css","component/InputTodo.js","component/TodoItem.js","component/TodosList.js","component/Header.js","component/ToDoContainer.js","App.js","index.js"],"names":["module","exports","InputTodo","props","onChange","e","setState","target","name","value","handleSubmit","preventDefault","state","title","trim","addTodoProps","alert","onSubmit","this","className","type","placeholder","React","Component","TodoItem","handleEditing","editing","handleUpdatedDone","event","key","todo","completed","id","viewMode","editMode","display","styles","item","onDoubleClick","style","checkbox","checked","handleChangeProps","onClick","deleteTodoProps","fontStyle","color","opacity","textDecoration","textInput","setUpdate","onKeyDown","TodosList","list","todos","map","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","ToDocontainer","handleChange","prevState","delTodo","filter","addTodoItem","newTodo","uuidv4","updatedTitle","clickHandler","bind","fetch","then","response","json","data","prevProps","temp","JSON","stringify","localStorage","setItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4c757fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__wQr-I\",\"checkbox\":\"TodoItem_checkbox__3yBIy\",\"textInput\":\"TodoItem_textInput__3PmSQ\"};","import React from 'react';\n\nclass InputTodo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n    };\n  }\n\n      onChange = (e) => {\n        this.setState({\n          [e.target.name]: e.target.value,\n        });\n      }\n\n      handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.title.trim()) {\n          this.props.addTodoProps(this.state.title);\n          this.setState({\n            title: '',\n          });\n        } else {\n          alert('Please write item');\n        }\n      }\n\n      render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n            <input\n            type=\"text\"\n            placeholder=\"Add Todo...\"\n            className=\"input-text\"\n            value={this.state.title}\n            name=\"title\"\n            onChange={this.onChange}\n            />\n            <button className=\"input-submit\">Submit</button>\n          </form>\n        );\n      }\n}\n\nexport default InputTodo;\n","import React from 'react';\nimport styles from './TodoItem.module.css';\n\nclass TodoItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      editing: false,\n    };\n  }\n\n  handleEditing = () => {\n    this.setState({\n      editing: true,\n    });\n  }\n\n  handleUpdatedDone = (event) => {\n    if (event.key === 'Enter') {\n      this.setState({ editing: false });\n    }\n  }\n\n  render() {\n    const completedStyle = {\n      fontStyle: 'italic',\n      color: '#595959',\n      opacity: 0.4,\n      textDecoration: 'line-through',\n    };\n    const { completed, id, title } = this.props.todo;\n    const viewMode = {};\n    const editMode = {};\n\n    if (this.state.editing) {\n      viewMode.display = 'none';\n    } else {\n      editMode.display = 'none';\n    }\n\n    return (\n      <li className={styles.item}>\n        <div onDoubleClick={this.handleEditing} style={viewMode}>\n      <input\n        type=\"checkbox\"\n        className={styles.checkbox}\n        checked={completed}\n        onChange={() => this.props.handleChangeProps(id)}\n      />\n      <button onClick={() => this.props.deleteTodoProps(id)}>\n        Delete\n      </button>\n      <span style={completed ? completedStyle : null}>\n        {title}\n      </span>\n      </div>\n      <input\n      type=\"text\"\n      style={editMode}\n      className={styles.textInput}\n      value={title}\n      onChange={(e) => {\n        this.props.setUpdate(e.target.value, id);\n      }}\n      onKeyDown={this.handleUpdatedDone}\n      />\n    </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodosList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n\n  render() {\n    return (\n        <div>\n            <ul>\n            {this.props.todos.map((todo) => (\n          <TodoItem\n           key={todo.id}\n           todo={todo}\n           handleChangeProps={this.props.handleChangeProps}\n           deleteTodoProps={this.props.deleteTodoProps}\n           setUpdate={this.props.setUpdate}\n           />\n            ))}\n            </ul>\n        </div>\n    );\n  }\n}\n\nexport default TodosList;\n","import React from 'react';\n\nconst Header = () => {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n\n  const heading = {\n    fontSize: '6rem',\n    fontWeight: '600',\n    marginBottom: '2rem',\n    lineHeight: '1em',\n    color: '#ececec',\n    textTransform: 'lowercase',\n    textAlign: 'center',\n  };\n\n  return (\n    <header style={headerStyle}>\n      <h1\n      style={heading}\n      >todos</h1>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport InputTodo from './InputTodo';\nimport TodosList from './TodosList';\nimport Header from './Header';\n\nclass ToDocontainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.state = {\n      todos: [\n        {\n          id: 1,\n          title: 'Setup development environment',\n          completed: true,\n        },\n        {\n          id: 2,\n          title: 'Develop website and add content',\n          completed: false,\n        },\n        {\n          id: 3,\n          title: 'Deploy to live server',\n          completed: false,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then((response) => response.json())\n      .then((data) => this.setState({ todos: data }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todos !== this.state.todos) {\n      const temp = JSON.stringify(this.state.todos);\n      localStorage.setItem('todos', temp);\n    }\n  }\n\n  clickHandler(e) {\n    this.setState({ todos: e });\n  }\n\n    handleChange = (id) => {\n      this.setState((prevState) => ({\n        todos: prevState.todos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              completed: !todo.completed,\n            };\n          }\n          return todo;\n        }),\n      }));\n    };\n\n      delTodo = (id) => {\n        this.setState({\n          todos: [\n            ...this.state.todos.filter((todo) => todo.id !== id),\n          ],\n        });\n      };\n\n      addTodoItem = (title) => {\n        const newTodo = {\n          id: uuidv4(),\n          title,\n          completed: false,\n        };\n        this.setState({\n          todos: [...this.state.todos, newTodo],\n        });\n      };\n\n      setUpdate = (updatedTitle, id) => {\n        this.setState({\n          todos: this.state.todos.map((todo) => {\n            if (todo.id === id) {\n              todo.title = updatedTitle;\n            }\n            return todo;\n          }),\n        });\n      }\n\n      render() {\n        return (\n        <div className=\"container\">\n            <div className=\"inner\">\n            <Header />\n           <InputTodo addTodoProps={this.addTodoItem}/>\n           <TodosList\n            todos = {this.state.todos}\n            handleChangeProps={this.handleChange}\n            deleteTodoProps={this.delTodo}\n            setUpdate={this.setUpdate}\n            />\n            </div>\n        </div>\n        );\n      }\n}\n\nexport default ToDocontainer;\n","import ToDocontainer from './component/ToDoContainer';\n\nimport './App.css';\n\nfunction App() {\n  return (\n      <ToDocontainer />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}